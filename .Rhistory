print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
groups[1] = groups[1] - 0.1
groups[G + 1] = groups[G + 1] + 0.1
groups.ind = findInterval(theta,groups)
groups.ind = factor(groups.ind, levels = unique(groups.ind))
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
groups.ind = factor(groups.ind, levels = unique(groups.ind))
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
groups.ind = factor(groups.ind, levels = unique(groups.ind))
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
groups.ind = factor(groups.ind, levels = unique(groups.ind))
print("gi")
print(groups.ind)
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
groups.ind = factor(groups.ind, levels = unique(groups.ind))
print("gi")
print(groups.ind)
groups.ind = sort(groups.ind)
print("gi")
print(groups.ind)
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
print("ugi")
print(unique(groups.ind)
groups.ind = factor(groups.ind, levels = unique(groups.ind))
print("gi")
print(groups.ind)
groups.ind = sort(groups.ind)
print("gi")
print(groups.ind)
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
print("ugi")
print(unique(groups.ind))
groups.ind = factor(groups.ind, levels = unique(groups.ind))
print("gi")
print(groups.ind)
groups.ind = sort(groups.ind)
print("gi")
print(groups.ind)
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
print("ugi")
print(unique(groups.ind))
groups.ind = factor(groups.ind, levels = sort(unique(groups.ind)))
print("gi")
print(groups.ind)
groups.ind = sort(groups.ind)
print("gi")
print(groups.ind)
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
#Item.fit de SICS
itemFit = function(est,G = 10,FUN = median,p.val.sim = FALSE,boot.num = 100){
pats = est$pats
zita = est$zita
scores = scoresEAP(est)
nitems = nrow(zita)
theta = scores[,nitems + 1 ]
frec = pats[,ncol(pats)]
patsSinFrec = pats[,-ncol(pats)]
groups = quantile(theta,seq(0, 1, length.out = G + 1))
print("groups")
print(groups)
groups[1] = groups[1] - 0.1
print("groups")
print(groups)
groups[G + 1] = groups[G + 1] + 0.1
print("groups")
print(groups)
groups.ind = findInterval(theta,groups)
print("gi")
print(groups.ind)
print("ugi")
print(unique(groups.ind))
groups.ind = factor(groups.ind, levels = sort(unique(groups.ind)))
print("gi")
print(groups.ind)
print("gi")
print(groups.ind)
thetaG = tapply(rep(theta, frec), rep(groups.ind, frec), FUN = FUN)
print("groups")
print(groups)
print("gi")
print(groups.ind)
print("tg")
print(thetaG)
pr = matrix(NA,ncol = nitems,nrow = G)
for(i in 1:G){
for(j in 1:nitems){
pr[i,j] = gg(a = zita[j,1],d = zita[j,2],cp = qlogis(zita[j,3]),theta = thetaG[i])
}
}
Nj = as.vector(tapply(frec, groups.ind, sum))
print("nj")
print(Nj)
Obs = rowsum(frec * patsSinFrec, groups.ind, reorder = FALSE)
print("obs")
print(Obs)
print("pr")
print(pr)
chi.square = Nj * (Obs - pr)^2/(pr * (1 - pr))
Tobs = colSums(chi.square, na.rm = TRUE)
df = G - 3
pvals <- pchisq(Tobs, df = df, lower.tail = FALSE)
salida = matrix(c(Tobs,pvals),ncol= 2)
salida
}
a=itemFit(est,G=10)
.Call("matprod2",A,B)
A = matrix(c(1:9),ncol=3)
B = matrix(c(1:6),nrow=3)
.Call("matprod2",A,B)
